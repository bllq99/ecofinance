"""
Django settings for ecofinance project.

Generated by 'django-admin startproject' using Django 5.2.
"""

from pathlib import Path
import os
from django.core.exceptions import ImproperlyConfigured
from .config import get_config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load configuration from config.ini
try:
    config = get_config()
    
    # Security settings - keep these secret!
    SECRET_KEY = config['settings']['secret_key']
    DEBUG = config['settings'].getboolean('debug')
    ALLOWED_HOSTS = [host.strip() for host in config['settings']['allowed_hosts'].split(',')]
    
    # Database configuration
    DATABASES = {
        'default': {
            'ENGINE': config['database']['engine'],
            'NAME': config['database']['name'],
            'USER': config['database']['user'],
            'PASSWORD': config['database']['password'],
            'HOST': config['database']['host'],
            'PORT': config['database']['port'],
        }
    }

except KeyError as e:
    raise ImproperlyConfigured(f"Missing required configuration: {str(e)}")
except Exception as e:
    raise ImproperlyConfigured(f"Error loading configuration: {str(e)}")

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'finanzas'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ecofinance.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecofinance.wsgi.application'

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'es-cl'  # Cambiado a español de Chile
TIME_ZONE = 'America/Santiago'  # Zona horaria de Chile
USE_I18N = True
USE_TZ = True
USE_L10N = True  # Habilitar localización
USE_THOUSAND_SEPARATOR = True

# Formato de números
NUMBER_GROUPING = 3
THOUSAND_SEPARATOR = '.'
DECIMAL_SEPARATOR = ','

# Static files (CSS, JavaScript, Images)
STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Para producción
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]  # Directorios adicionales

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuración de autenticación
LOGIN_REDIRECT_URL = 'dashboard'  # Redirige al dashboard después del login
LOGIN_URL = 'login'  # URL para la página de login

# Backend de autenticación personalizado
AUTHENTICATION_BACKENDS = [
    'finanzas.backends.EmailBackend',
    'django.contrib.auth.backends.ModelBackend',  # Mantener el backend por defecto como respaldo
]